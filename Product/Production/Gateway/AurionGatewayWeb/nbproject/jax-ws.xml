<?xml version="1.0" encoding="UTF-8"?>
<jax-ws xmlns="http://www.netbeans.org/ns/jax-ws/1">
  <services>
    <service name="EntityDocRetrieveSecured">
      <implementation-class>org.alembic.aurion.docretrieve.entity.EntityDocRetrieveSecured</implementation-class>
      <wsdl-url>file:/C:/Projects/NHINC/Current/Product/Production/Common/Interfaces/src/wsdl/EntityDocRetrieveSecured.wsdl</wsdl-url>
      <local-wsdl-file>EntityDocRetrieveSecured.wsdl</local-wsdl-file>
      <service-name>EntityDocRetrieveSecured</service-name>
      <port-name>EntityDocRetrieveSecuredPortSoap</port-name>
      <package-name>org.alembic.aurion.entitydocretrievesecured</package-name>
      <catalog-file>catalog.xml</catalog-file>
      <use-provider>false</use-provider>
      <wsimport-options>
        <wsimport-option>
          <wsimport-option-name>extension</wsimport-option-name>
          <wsimport-option-value>true</wsimport-option-value>
        </wsimport-option>
        <wsimport-option>
          <wsimport-option-name>verbose</wsimport-option-name>
          <wsimport-option-value>true</wsimport-option-value>
        </wsimport-option>
        <wsimport-option>
          <wsimport-option-name>xnocompile</wsimport-option-name>
          <wsimport-option-value>true</wsimport-option-value>
        </wsimport-option>
      </wsimport-options>
    </service>
    <service name="GatewaySubscriptionReferenceRepository">
      <implementation-class>org.alembic.aurion.subscription.repository.GatewaySubscriptionReferenceRepository</implementation-class>
      <wsdl-url>file:/C:/Projects/NHINC/Current/Product/Production/Common/Interfaces/src/wsdl/NhincComponentSubscriptionReferenceRepository.wsdl</wsdl-url>
      <local-wsdl-file>NhincComponentSubscriptionReferenceRepository.wsdl</local-wsdl-file>
      <service-name>NhincComponentSubscriptionReferenceRepositoryService</service-name>
      <port-name>NhincComponentSubscriptionReferenceRepositoryPortTypeBindingPort</port-name>
      <package-name>org.alembic.aurion.nhinccomponentsubscriptionreferencerepository</package-name>
      <catalog-file>catalog.xml</catalog-file>
      <use-provider>false</use-provider>
      <wsimport-options>
        <wsimport-option>
          <wsimport-option-name>extension</wsimport-option-name>
          <wsimport-option-value>true</wsimport-option-value>
        </wsimport-option>
        <wsimport-option>
          <wsimport-option-name>verbose</wsimport-option-name>
          <wsimport-option-value>true</wsimport-option-value>
        </wsimport-option>
        <wsimport-option>
          <wsimport-option-name>xnocompile</wsimport-option-name>
          <wsimport-option-value>true</wsimport-option-value>
        </wsimport-option>
      </wsimport-options>
    </service>
    <service name="GatewaySubscriptionRepository">
      <implementation-class>org.alembic.aurion.subscription.repository.GatewaySubscriptionRepository</implementation-class>
      <wsdl-url>file:/C:/Projects/NHINC/Current/Product/Production/Common/Interfaces/src/wsdl/NhincComponentSubscriptionRepository.wsdl</wsdl-url>
      <local-wsdl-file>NhincComponentSubscriptionRepository.wsdl</local-wsdl-file>
      <service-name>NhincComponentSubscriptionRepositoryService</service-name>
      <port-name>NhincComponentSubscriptionRepositoryPort</port-name>
      <package-name>org.alembic.aurion.nhinccomponentsubscriptionrepository</package-name>
      <catalog-file>catalog.xml</catalog-file>
      <use-provider>false</use-provider>
      <wsimport-options>
        <wsimport-option>
          <wsimport-option-name>extension</wsimport-option-name>
          <wsimport-option-value>true</wsimport-option-value>
        </wsimport-option>
        <wsimport-option>
          <wsimport-option-name>verbose</wsimport-option-name>
          <wsimport-option-value>true</wsimport-option-value>
        </wsimport-option>
        <wsimport-option>
          <wsimport-option-name>xnocompile</wsimport-option-name>
          <wsimport-option-value>true</wsimport-option-value>
        </wsimport-option>
      </wsimport-options>
    </service>
    <service name="HiemSubscriptionRepositoryUtilService">
      <implementation-class>org.alembic.aurion.subscription.repository.util.HiemSubscriptionRepositoryUtilService</implementation-class>
      <wsdl-url>file:/C:/Projects/NHINC/Current/Product/Production/Common/Interfaces/src/wsdl/HiemSubscriptionRepositoryUtil.wsdl</wsdl-url>
      <local-wsdl-file>HiemSubscriptionRepositoryUtil.wsdl</local-wsdl-file>
      <service-name>HiemSubscriptionRepositoryUtilService</service-name>
      <port-name>HiemSubscriptionRepositoryUtilPortTypeBindingPort</port-name>
      <package-name>org.alembic.aurion.hiemsubscriptionrepositoryutil</package-name>
      <catalog-file>catalog.xml</catalog-file>
      <use-provider>false</use-provider>
      <wsimport-options>
        <wsimport-option>
          <wsimport-option-name>extension</wsimport-option-name>
          <wsimport-option-value>true</wsimport-option-value>
        </wsimport-option>
        <wsimport-option>
          <wsimport-option-name>verbose</wsimport-option-name>
          <wsimport-option-value>true</wsimport-option-value>
        </wsimport-option>
        <wsimport-option>
          <wsimport-option-name>xnocompile</wsimport-option-name>
          <wsimport-option-value>true</wsimport-option-value>
        </wsimport-option>
      </wsimport-options>
    </service>
    <service name="AdapterSubjectDiscovery">
      <implementation-class>org.alembic.aurion.adapter.subjectdiscovery.AdapterSubjectDiscovery</implementation-class>
      <wsdl-url>file:/C:/Projects/NHINC/Current/Product/Production/Common/Interfaces/src/wsdl/AdapterSubjectDiscovery.wsdl</wsdl-url>
      <local-wsdl-file>AdapterSubjectDiscovery.wsdl</local-wsdl-file>
      <service-name>AdapterSubjectDiscovery</service-name>
      <port-name>AdapterSubjectDiscoveryPortSoap</port-name>
      <package-name>org.alembic.aurion.adaptersubjectdiscovery</package-name>
      <catalog-file>catalog.xml</catalog-file>
      <use-provider>false</use-provider>
      <wsimport-options>
        <wsimport-option>
          <wsimport-option-name>extension</wsimport-option-name>
          <wsimport-option-value>true</wsimport-option-value>
        </wsimport-option>
        <wsimport-option>
          <wsimport-option-name>verbose</wsimport-option-name>
          <wsimport-option-value>true</wsimport-option-value>
        </wsimport-option>
        <wsimport-option>
          <wsimport-option-name>xnocompile</wsimport-option-name>
          <wsimport-option-value>true</wsimport-option-value>
        </wsimport-option>
      </wsimport-options>
    </service>
    <service name="EntityPatientDiscoverySecured">
      <implementation-class>org.alembic.aurion.patientdiscovery.entity.EntityPatientDiscoverySecured</implementation-class>
      <wsdl-url>file:/C:/Projects/NHINC/Current/Product/Production/Common/Interfaces/src/wsdl/EntityPatientDiscoverySecured.wsdl</wsdl-url>
      <local-wsdl-file>EntityPatientDiscoverySecured.wsdl</local-wsdl-file>
      <service-name>EntityPatientDiscoverySecured</service-name>
      <port-name>EntityPatientDiscoverySecuredPortSoap</port-name>
      <package-name>org.alembic.aurion.entitypatientdiscoverysecured</package-name>
      <catalog-file>catalog.xml</catalog-file>
      <use-provider>false</use-provider>
      <wsimport-options>
        <wsimport-option>
          <wsimport-option-name>extension</wsimport-option-name>
          <wsimport-option-value>true</wsimport-option-value>
        </wsimport-option>
        <wsimport-option>
          <wsimport-option-name>verbose</wsimport-option-name>
          <wsimport-option-value>true</wsimport-option-value>
        </wsimport-option>
        <wsimport-option>
          <wsimport-option-name>xnocompile</wsimport-option-name>
          <wsimport-option-value>true</wsimport-option-value>
        </wsimport-option>
      </wsimport-options>
    </service>
    <service name="NhincProxyPatientDiscoverySecured">
      <implementation-class>org.alembic.aurion.patientdiscovery.proxy.NhincProxyPatientDiscoverySecured</implementation-class>
      <wsdl-url>file:/C:/Projects/NHINC/Current/Product/Production/Common/Interfaces/src/wsdl/NhincProxyPatientDiscoverySecured.wsdl</wsdl-url>
      <local-wsdl-file>NhincProxyPatientDiscoverySecured.wsdl</local-wsdl-file>
      <service-name>NhincProxyPatientDiscoverySecured</service-name>
      <port-name>NhincProxyPatientDiscoverySecuredPort</port-name>
      <package-name>org.alembic.aurion.nhincproxypatientdiscoverysecured</package-name>
      <catalog-file>catalog.xml</catalog-file>
      <use-provider>false</use-provider>
      <wsimport-options>
        <wsimport-option>
          <wsimport-option-name>extension</wsimport-option-name>
          <wsimport-option-value>true</wsimport-option-value>
        </wsimport-option>
        <wsimport-option>
          <wsimport-option-name>verbose</wsimport-option-name>
          <wsimport-option-value>true</wsimport-option-value>
        </wsimport-option>
        <wsimport-option>
          <wsimport-option-name>xnocompile</wsimport-option-name>
          <wsimport-option-value>true</wsimport-option-value>
        </wsimport-option>
      </wsimport-options>
    </service>
    <service name="EntitySubjectDiscoverySecured">
      <implementation-class>org.alembic.aurion.subjectdiscovery.entity.EntitySubjectDiscoverySecured</implementation-class>
      <wsdl-url>file:/C:/Projects/NHINC/Current/Product/Production/Common/Interfaces/src/wsdl/EntitySubjectDiscoverySecured.wsdl</wsdl-url>
      <local-wsdl-file>EntitySubjectDiscoverySecured.wsdl</local-wsdl-file>
      <service-name>EntitySubjectDiscoverySecured</service-name>
      <port-name>EntitySubjectDiscoverySecuredPortSoap</port-name>
      <package-name>org.alembic.aurion.entitysubjectdiscoverysecured</package-name>
      <catalog-file>catalog.xml</catalog-file>
      <use-provider>false</use-provider>
      <wsimport-options>
        <wsimport-option>
          <wsimport-option-name>extension</wsimport-option-name>
          <wsimport-option-value>true</wsimport-option-value>
        </wsimport-option>
        <wsimport-option>
          <wsimport-option-name>verbose</wsimport-option-name>
          <wsimport-option-value>true</wsimport-option-value>
        </wsimport-option>
        <wsimport-option>
          <wsimport-option-name>xnocompile</wsimport-option-name>
          <wsimport-option-value>true</wsimport-option-value>
        </wsimport-option>
      </wsimport-options>
    </service>
    <service name="NhincSubjectDiscoverySecured">
      <implementation-class>org.alembic.aurion.subjectdiscovery.proxy.NhincSubjectDiscoverySecured</implementation-class>
      <wsdl-url>file:/C:/Projects/NHINC/Current/Product/Production/Common/Interfaces/src/wsdl/NhincProxySubjectDiscoverySecured.wsdl</wsdl-url>
      <local-wsdl-file>NhincProxySubjectDiscoverySecured.wsdl</local-wsdl-file>
      <service-name>NhincProxySubjectDiscoverySecured</service-name>
      <port-name>NhincProxySubjectDiscoverySecuredPortSoap</port-name>
      <package-name>org.alembic.aurion.nhincproxysubjectdiscoverysecured</package-name>
      <catalog-file>catalog.xml</catalog-file>
      <use-provider>false</use-provider>
      <wsimport-options>
        <wsimport-option>
          <wsimport-option-name>extension</wsimport-option-name>
          <wsimport-option-value>true</wsimport-option-value>
        </wsimport-option>
        <wsimport-option>
          <wsimport-option-name>verbose</wsimport-option-name>
          <wsimport-option-value>true</wsimport-option-value>
        </wsimport-option>
        <wsimport-option>
          <wsimport-option-name>xnocompile</wsimport-option-name>
          <wsimport-option-value>true</wsimport-option-value>
        </wsimport-option>
      </wsimport-options>
    </service>
    <service name="NhincProxyXDRSecured">
      <implementation-class>org.alembic.aurion.xdr.proxy.NhincProxyXDRSecured</implementation-class>
      <wsdl-url>file:/C:/projects/nhinc/Current/Product/Production/Common/Interfaces/src/wsdl/NhincProxyXDRSecured.wsdl</wsdl-url>
      <local-wsdl-file>NhincProxyXDRSecured.wsdl</local-wsdl-file>
      <service-name>ProxyXDRSecured_Service</service-name>
      <port-name>ProxyXDRSecured_Port</port-name>
      <package-name>org.alembic.aurion.nhincproxyxdrsecured</package-name>
      <catalog-file>catalog.xml</catalog-file>
      <use-provider>false</use-provider>
      <wsimport-options>
        <wsimport-option>
          <wsimport-option-name>extension</wsimport-option-name>
          <wsimport-option-value>true</wsimport-option-value>
        </wsimport-option>
        <wsimport-option>
          <wsimport-option-name>verbose</wsimport-option-name>
          <wsimport-option-value>true</wsimport-option-value>
        </wsimport-option>
        <wsimport-option>
          <wsimport-option-name>xnocompile</wsimport-option-name>
          <wsimport-option-value>true</wsimport-option-value>
        </wsimport-option>
      </wsimport-options>
    </service>
    <service name="NhincProxyXDRRequestSecured">
      <implementation-class>org.alembic.aurion.xdr.request.proxy.NhincProxyXDRRequestSecured</implementation-class>
      <wsdl-url>file:/C:/Projects/NHINC/Current/Product/Production/Common/Interfaces/src/wsdl/NhincProxyXDRSecuredRequest.wsdl</wsdl-url>
      <local-wsdl-file>NhincProxyXDRSecuredRequest.wsdl</local-wsdl-file>
      <service-name>ProxyXDRSecuredAsyncRequest_Service</service-name>
      <port-name>ProxyXDRSecuredAsyncRequest_Port</port-name>
      <package-name>org.alembic.aurion.nhincproxyxdrsecured.async.request</package-name>
      <catalog-file>catalog.xml</catalog-file>
      <use-provider>false</use-provider>
      <wsimport-options>
        <wsimport-option>
          <wsimport-option-name>extension</wsimport-option-name>
          <wsimport-option-value>true</wsimport-option-value>
        </wsimport-option>
        <wsimport-option>
          <wsimport-option-name>verbose</wsimport-option-name>
          <wsimport-option-value>true</wsimport-option-value>
        </wsimport-option>
        <wsimport-option>
          <wsimport-option-name>xnocompile</wsimport-option-name>
          <wsimport-option-value>true</wsimport-option-value>
        </wsimport-option>
      </wsimport-options>
    </service>
    <service name="NhincProxyXDRResponseSecured">
      <implementation-class>org.alembic.aurion.xdr.response.proxy.NhincProxyXDRResponseSecured</implementation-class>
      <wsdl-url>file:/C:/Projects/NHINC/Current/Product/Production/Common/Interfaces/src/wsdl/NhincProxyXDRSecuredResponse.wsdl</wsdl-url>
      <local-wsdl-file>NhincProxyXDRSecuredResponse.wsdl</local-wsdl-file>
      <service-name>ProxyXDRSecuredAsyncResponse_Service</service-name>
      <port-name>ProxyXDRSecuredAsyncResponse_Port</port-name>
      <package-name>org.alembic.aurion.nhincproxyxdrsecured.async.response</package-name>
      <catalog-file>catalog.xml</catalog-file>
      <use-provider>false</use-provider>
      <wsimport-options>
        <wsimport-option>
          <wsimport-option-name>extension</wsimport-option-name>
          <wsimport-option-value>true</wsimport-option-value>
        </wsimport-option>
        <wsimport-option>
          <wsimport-option-name>verbose</wsimport-option-name>
          <wsimport-option-value>true</wsimport-option-value>
        </wsimport-option>
        <wsimport-option>
          <wsimport-option-name>xnocompile</wsimport-option-name>
          <wsimport-option-value>true</wsimport-option-value>
        </wsimport-option>
      </wsimport-options>
    </service>
    <service name="AdapterXDRRequest">
      <implementation-class>org.alembic.aurion.adapter.xdr.async.request.AdapterXDRRequest</implementation-class>
      <wsdl-url>file:/C:/Projects/NHINC/Current/Product/Production/Common/Interfaces/src/wsdl/AdapterXDRRequest.wsdl</wsdl-url>
      <local-wsdl-file>AdapterXDRRequest.wsdl</local-wsdl-file>
      <service-name>AdapterXDRRequest_Service</service-name>
      <port-name>AdapterXDRRequest_Port</port-name>
      <package-name>org.alembic.aurion.adapterxdrrequest</package-name>
      <catalog-file>catalog.xml</catalog-file>
      <use-provider>false</use-provider>
      <wsimport-options>
        <wsimport-option>
          <wsimport-option-name>extension</wsimport-option-name>
          <wsimport-option-value>true</wsimport-option-value>
        </wsimport-option>
        <wsimport-option>
          <wsimport-option-name>verbose</wsimport-option-name>
          <wsimport-option-value>true</wsimport-option-value>
        </wsimport-option>
        <wsimport-option>
          <wsimport-option-name>xnocompile</wsimport-option-name>
          <wsimport-option-value>true</wsimport-option-value>
        </wsimport-option>
      </wsimport-options>
    </service>
    <service name="AdapterXDRResponse">
      <implementation-class>org.alembic.aurion.adapter.xdr.async.response.AdapterXDRResponse</implementation-class>
      <wsdl-url>file:/C:/Projects/NHINC/Current/Product/Production/Common/Interfaces/src/wsdl/AdapterXDRResponse.wsdl</wsdl-url>
      <local-wsdl-file>AdapterXDRResponse.wsdl</local-wsdl-file>
      <service-name>AdapterXDRResponse_Service</service-name>
      <port-name>AdapterXDRResponse_Port</port-name>
      <package-name>org.alembic.aurion.adapterxdrresponse</package-name>
      <catalog-file>catalog.xml</catalog-file>
      <use-provider>false</use-provider>
      <wsimport-options>
        <wsimport-option>
          <wsimport-option-name>extension</wsimport-option-name>
          <wsimport-option-value>true</wsimport-option-value>
        </wsimport-option>
        <wsimport-option>
          <wsimport-option-name>verbose</wsimport-option-name>
          <wsimport-option-value>true</wsimport-option-value>
        </wsimport-option>
        <wsimport-option>
          <wsimport-option-name>xnocompile</wsimport-option-name>
          <wsimport-option-value>true</wsimport-option-value>
        </wsimport-option>
      </wsimport-options>
    </service>
    <service name="AdapterPatientDiscoveryAsyncReqQueue">
      <implementation-class>org.alembic.aurion.adapter.patientdiscovery.async.request.queue.AdapterPatientDiscoveryAsyncReqQueue</implementation-class>
      <wsdl-url>file:/C:/Projects/NHINC/Current/Product/Production/Common/Interfaces/src/wsdl/AdapterPatientDiscoveryAsyncReqQueue.wsdl</wsdl-url>
      <local-wsdl-file>AdapterPatientDiscoveryAsyncReqQueue.wsdl</local-wsdl-file>
      <service-name>AdapterPatientDiscoveryAsyncReqQueue</service-name>
      <port-name>AdapterPatientDiscoveryAsyncReqQueuePortSoap</port-name>
      <package-name>org.alembic.aurion.adapterpatientdiscoveryasyncreqqueue</package-name>
      <catalog-file>catalog.xml</catalog-file>
      <use-provider>false</use-provider>
      <wsimport-options>
        <wsimport-option>
          <wsimport-option-name>extension</wsimport-option-name>
          <wsimport-option-value>true</wsimport-option-value>
        </wsimport-option>
        <wsimport-option>
          <wsimport-option-name>verbose</wsimport-option-name>
          <wsimport-option-value>true</wsimport-option-value>
        </wsimport-option>
        <wsimport-option>
          <wsimport-option-name>xnocompile</wsimport-option-name>
          <wsimport-option-value>true</wsimport-option-value>
        </wsimport-option>
      </wsimport-options>
    </service>
    <service name="NhincProxyPatientDiscoverySecuredAsyncReq">
      <implementation-class>org.alembic.aurion.patientdiscovery.proxy.async.request.NhincProxyPatientDiscoverySecuredAsyncReq</implementation-class>
      <wsdl-url>file:/C:/Projects/NHINC/Current/Product/Production/Common/Interfaces/src/wsdl/NhincProxyPatientDiscoverySecuredAsyncReq.wsdl</wsdl-url>
      <local-wsdl-file>NhincProxyPatientDiscoverySecuredAsyncReq.wsdl</local-wsdl-file>
      <service-name>NhincProxyPatientDiscoverySecuredAsyncReq</service-name>
      <port-name>NhincProxyPatientDiscoverySecuredAsyncReqPortType</port-name>
      <package-name>org.alembic.aurion.nhincproxypatientdiscoverysecuredasyncreq</package-name>
      <catalog-file>catalog.xml</catalog-file>
      <use-provider>false</use-provider>
      <wsimport-options>
        <wsimport-option>
          <wsimport-option-name>extension</wsimport-option-name>
          <wsimport-option-value>true</wsimport-option-value>
        </wsimport-option>
        <wsimport-option>
          <wsimport-option-name>verbose</wsimport-option-name>
          <wsimport-option-value>true</wsimport-option-value>
        </wsimport-option>
        <wsimport-option>
          <wsimport-option-name>xnocompile</wsimport-option-name>
          <wsimport-option-value>true</wsimport-option-value>
        </wsimport-option>
      </wsimport-options>
    </service>
    <service name="EntityDocQuerySecured">
      <implementation-class>org.alembic.aurion.docquery.entity.EntityDocQuerySecured</implementation-class>
      <wsdl-url>file:/C:/Projects/NHINC/Current/Product/Production/Common/Interfaces/src/wsdl/EntityDocQuerySecured.wsdl</wsdl-url>
      <local-wsdl-file>EntityDocQuerySecured.wsdl</local-wsdl-file>
      <service-name>EntityDocQuerySecured</service-name>
      <port-name>EntityDocQuerySecuredPortSoap</port-name>
      <package-name>org.alembic.aurion.entitydocquery</package-name>
      <catalog-file>catalog.xml</catalog-file>
      <use-provider>false</use-provider>
      <wsimport-options>
        <wsimport-option>
          <wsimport-option-name>extension</wsimport-option-name>
          <wsimport-option-value>true</wsimport-option-value>
        </wsimport-option>
        <wsimport-option>
          <wsimport-option-name>verbose</wsimport-option-name>
          <wsimport-option-value>true</wsimport-option-value>
        </wsimport-option>
        <wsimport-option>
          <wsimport-option-name>xnocompile</wsimport-option-name>
          <wsimport-option-value>true</wsimport-option-value>
        </wsimport-option>
      </wsimport-options>
    </service>
    <service name="EntityAuditLogQuery">
      <implementation-class>org.alembic.aurion.auditquery.entity.EntityAuditLogQuery</implementation-class>
      <wsdl-url>file:/C:/Projects/NHINC/Current/Product/Production/Common/Interfaces/src/wsdl/EntityAuditLogQuerySecured.wsdl</wsdl-url>
      <local-wsdl-file>EntityAuditLogQuerySecured.wsdl</local-wsdl-file>
      <service-name>EntityAuditLogQuerySamlService</service-name>
      <port-name>EntityAuditLogQuerySamlPortTypeBindingPort</port-name>
      <package-name>org.alembic.aurion.entityauditlogquerysaml</package-name>
      <catalog-file>catalog.xml</catalog-file>
      <use-provider>false</use-provider>
      <wsimport-options>
        <wsimport-option>
          <wsimport-option-name>extension</wsimport-option-name>
          <wsimport-option-value>true</wsimport-option-value>
        </wsimport-option>
        <wsimport-option>
          <wsimport-option-name>verbose</wsimport-option-name>
          <wsimport-option-value>true</wsimport-option-value>
        </wsimport-option>
        <wsimport-option>
          <wsimport-option-name>xnocompile</wsimport-option-name>
          <wsimport-option-value>true</wsimport-option-value>
        </wsimport-option>
      </wsimport-options>
    </service>
    <service name="NhincAuditQueryProxy">
      <implementation-class>org.alembic.aurion.auditquery.proxy.NhincAuditQueryProxy</implementation-class>
      <wsdl-url>file:/C:/Projects/NHINC/Current/Product/Production/Common/Interfaces/src/wsdl/NhincProxyAuditLogQuerySecured.wsdl</wsdl-url>
      <local-wsdl-file>NhincProxyAuditLogQuerySecured.wsdl</local-wsdl-file>
      <service-name>NhincProxyAuditLogQuerySecured</service-name>
      <port-name>NhincProxyAuditLogQuerySecuredPortSoap</port-name>
      <package-name>org.alembic.aurion.nhincproxyauditlogquerysecured</package-name>
      <catalog-file>catalog.xml</catalog-file>
      <use-provider>false</use-provider>
      <wsimport-options>
        <wsimport-option>
          <wsimport-option-name>extension</wsimport-option-name>
          <wsimport-option-value>true</wsimport-option-value>
        </wsimport-option>
        <wsimport-option>
          <wsimport-option-name>verbose</wsimport-option-name>
          <wsimport-option-value>true</wsimport-option-value>
        </wsimport-option>
        <wsimport-option>
          <wsimport-option-name>xnocompile</wsimport-option-name>
          <wsimport-option-value>true</wsimport-option-value>
        </wsimport-option>
      </wsimport-options>
    </service>
    <service name="EntityPatientDiscoveryUnsecured">
      <implementation-class>org.alembic.aurion.patientdiscovery.entity.EntityPatientDiscoveryUnsecured</implementation-class>
      <wsdl-url>file:/C:/Projects/NHINC/Current/Product/Production/Common/Interfaces/src/wsdl/EntityPatientDiscovery.wsdl</wsdl-url>
      <local-wsdl-file>EntityPatientDiscovery.wsdl</local-wsdl-file>
      <service-name>EntityPatientDiscovery</service-name>
      <port-name>EntityPatientDiscoveryPortSoap</port-name>
      <package-name>org.alembic.aurion.entitypatientdiscovery</package-name>
      <catalog-file>catalog.xml</catalog-file>
      <use-provider>false</use-provider>
      <wsimport-options>
        <wsimport-option>
          <wsimport-option-name>extension</wsimport-option-name>
          <wsimport-option-value>true</wsimport-option-value>
        </wsimport-option>
        <wsimport-option>
          <wsimport-option-name>verbose</wsimport-option-name>
          <wsimport-option-value>true</wsimport-option-value>
        </wsimport-option>
        <wsimport-option>
          <wsimport-option-name>xnocompile</wsimport-option-name>
          <wsimport-option-value>true</wsimport-option-value>
        </wsimport-option>
      </wsimport-options>
    </service>
    <service name="AdapterXDRRequestError">
      <implementation-class>org.alembic.aurion.adapter.xdr.async.request.error.AdapterXDRRequestError</implementation-class>
      <wsdl-url>file:/C:/Projects/NHINC/Current/Product/Production/Common/Interfaces/src/wsdl/AdapterXDRRequestError.wsdl</wsdl-url>
      <local-wsdl-file>AdapterXDRRequestError.wsdl</local-wsdl-file>
      <service-name>AdapterXDRRequestError_Service</service-name>
      <port-name>AdapterXDRRequestError_Port</port-name>
      <package-name>org.alembic.aurion.adapterxdrrequesterror</package-name>
      <catalog-file>catalog.xml</catalog-file>
      <use-provider>false</use-provider>
      <wsimport-options>
        <wsimport-option>
          <wsimport-option-name>extension</wsimport-option-name>
          <wsimport-option-value>true</wsimport-option-value>
        </wsimport-option>
        <wsimport-option>
          <wsimport-option-name>verbose</wsimport-option-name>
          <wsimport-option-value>true</wsimport-option-value>
        </wsimport-option>
        <wsimport-option>
          <wsimport-option-name>xnocompile</wsimport-option-name>
          <wsimport-option-value>true</wsimport-option-value>
        </wsimport-option>
      </wsimport-options>
    </service>
    <service name="PatientCorrelationServiceSecured">
      <implementation-class>org.alembic.aurion.patientcorrelation.nhinc.PatientCorrelationServiceSecured</implementation-class>
      <wsdl-url>file:/C:/Projects/NHINC/Current/Product/Production/Common/Interfaces/src/wsdl/NhincComponentPatientCorrelationSecured.wsdl</wsdl-url>
      <local-wsdl-file>NhincComponentPatientCorrelationSecured.wsdl</local-wsdl-file>
      <service-name>PatientCorrelationServiceSecured</service-name>
      <port-name>PatientCorrelationSecuredPort</port-name>
      <package-name>org.alembic.aurion.nhinccomponentpatientcorrelation</package-name>
      <catalog-file>catalog.xml</catalog-file>
      <use-provider>false</use-provider>
      <wsimport-options>
        <wsimport-option>
          <wsimport-option-name>extension</wsimport-option-name>
          <wsimport-option-value>true</wsimport-option-value>
        </wsimport-option>
        <wsimport-option>
          <wsimport-option-name>verbose</wsimport-option-name>
          <wsimport-option-value>true</wsimport-option-value>
        </wsimport-option>
        <wsimport-option>
          <wsimport-option-name>xnocompile</wsimport-option-name>
          <wsimport-option-value>true</wsimport-option-value>
        </wsimport-option>
      </wsimport-options>
    </service>
    <service name="GatewayLiftManager">
      <implementation-class>org.alembic.aurion.lift.GatewayLiftManager</implementation-class>
      <wsdl-url>file:/C:/Projects/NHINC/Current/Product/Production/Common/Interfaces/src/wsdl/NhincComponentLiftManager.wsdl</wsdl-url>
      <local-wsdl-file>NhincComponentLiftManager.wsdl</local-wsdl-file>
      <service-name>NhincComponentLiftManager</service-name>
      <port-name>NhincComponentLiftManagerPort</port-name>
      <package-name>org.alembic.aurion.nhinccomponentliftmanager</package-name>
      <catalog-file>catalog.xml</catalog-file>
      <use-provider>false</use-provider>
      <wsimport-options>
        <wsimport-option>
          <wsimport-option-name>extension</wsimport-option-name>
          <wsimport-option-value>true</wsimport-option-value>
        </wsimport-option>
        <wsimport-option>
          <wsimport-option-name>verbose</wsimport-option-name>
          <wsimport-option-value>true</wsimport-option-value>
        </wsimport-option>
        <wsimport-option>
          <wsimport-option-name>xnocompile</wsimport-option-name>
          <wsimport-option-value>true</wsimport-option-value>
        </wsimport-option>
      </wsimport-options>
    </service>
    <service name="PatientCorrelationFacadeDteService">
      <implementation-class>org.alembic.aurion.common.patientcorrelationfacade.dte.PatientCorrelationFacadeDteService</implementation-class>
      <wsdl-url>file:/C:/Projects/NHINC/Current/Product/Production/Common/Interfaces/src/wsdl/NhincComponentPatientCorrelationFacadeDte.wsdl</wsdl-url>
      <local-wsdl-file>NhincComponentPatientCorrelationFacadeDte.wsdl</local-wsdl-file>
      <service-name>NhincComponentPatientCorrelationFacadeDteService</service-name>
      <port-name>PatientCorrelationFacadeDteBindingPort</port-name>
      <package-name>org.alembic.aurion.componentpatientcorrelationfacadedte</package-name>
      <catalog-file>catalog.xml</catalog-file>
      <use-provider>false</use-provider>
      <wsimport-options>
        <wsimport-option>
          <wsimport-option-name>extension</wsimport-option-name>
          <wsimport-option-value>true</wsimport-option-value>
        </wsimport-option>
        <wsimport-option>
          <wsimport-option-name>verbose</wsimport-option-name>
          <wsimport-option-value>true</wsimport-option-value>
        </wsimport-option>
        <wsimport-option>
          <wsimport-option-name>xnocompile</wsimport-option-name>
          <wsimport-option-value>true</wsimport-option-value>
        </wsimport-option>
      </wsimport-options>
    </service>
    <service name="AuditRepository">
      <implementation-class>org.alembic.aurion.auditrepository.nhinc.AuditRepository</implementation-class>
      <wsdl-url>file:/C:/Projects/NHINC/Current/Product/Production/Common/Interfaces/src/wsdl/NhincComponentAuditRepositorySecured.wsdl</wsdl-url>
      <local-wsdl-file>NhincComponentAuditRepositorySecured.wsdl</local-wsdl-file>
      <service-name>AuditRepositoryManagerSecuredService</service-name>
      <port-name>AuditRepositoryManagerSecuredPort</port-name>
      <package-name>org.alembic.aurion.nhinccomponentauditrepository</package-name>
      <catalog-file>catalog.xml</catalog-file>
      <use-provider>false</use-provider>
      <wsimport-options>
        <wsimport-option>
          <wsimport-option-name>extension</wsimport-option-name>
          <wsimport-option-value>true</wsimport-option-value>
        </wsimport-option>
        <wsimport-option>
          <wsimport-option-name>verbose</wsimport-option-name>
          <wsimport-option-value>true</wsimport-option-value>
        </wsimport-option>
        <wsimport-option>
          <wsimport-option-name>xnocompile</wsimport-option-name>
          <wsimport-option-value>true</wsimport-option-value>
        </wsimport-option>
      </wsimport-options>
    </service>
    <service name="EntityAdministrativeDistribution">
      <implementation-class>org.alembic.aurion.admindistribution.entity.EntityAdministrativeDistribution</implementation-class>
      <wsdl-url>file:/C:/projects/nhinc/Current/Product/Production/Common/Interfaces/src/wsdl/EntityAdminDist.wsdl</wsdl-url>
      <local-wsdl-file>EntityAdminDist.wsdl</local-wsdl-file>
      <service-name>AdministrativeDistribution_Service</service-name>
      <port-name>AdministrativeDistribution_PortType</port-name>
      <package-name>org.alembic.aurion.entityadmindistribution</package-name>
      <catalog-file>catalog.xml</catalog-file>
      <use-provider>false</use-provider>
      <wsimport-options>
        <wsimport-option>
          <wsimport-option-name>extension</wsimport-option-name>
          <wsimport-option-value>true</wsimport-option-value>
        </wsimport-option>
        <wsimport-option>
          <wsimport-option-name>verbose</wsimport-option-name>
          <wsimport-option-value>true</wsimport-option-value>
        </wsimport-option>
        <wsimport-option>
          <wsimport-option-name>xnocompile</wsimport-option-name>
          <wsimport-option-value>true</wsimport-option-value>
        </wsimport-option>
      </wsimport-options>
    </service>
    <service name="EntityAdministrativeDistributionSecured">
      <implementation-class>org.alembic.aurion.admindistribution.entity.EntityAdministrativeDistributionSecured</implementation-class>
      <wsdl-url>file:/C:/projects/nhinc/Current/Product/Production/Common/Interfaces/src/wsdl/EntityAdminDistSecured.wsdl</wsdl-url>
      <local-wsdl-file>EntityAdminDistSecured.wsdl</local-wsdl-file>
      <service-name>AdministrativeDistributionSecured_Service</service-name>
      <port-name>AdministrativeDistributionSecured_PortType</port-name>
      <package-name>org.alembic.aurion.entityadmindistribution</package-name>
      <catalog-file>catalog.xml</catalog-file>
      <use-provider>false</use-provider>
      <wsimport-options>
        <wsimport-option>
          <wsimport-option-name>extension</wsimport-option-name>
          <wsimport-option-value>true</wsimport-option-value>
        </wsimport-option>
        <wsimport-option>
          <wsimport-option-name>verbose</wsimport-option-name>
          <wsimport-option-value>true</wsimport-option-value>
        </wsimport-option>
        <wsimport-option>
          <wsimport-option-name>xnocompile</wsimport-option-name>
          <wsimport-option-value>true</wsimport-option-value>
        </wsimport-option>
      </wsimport-options>
    </service>
    <service name="NhinAdministrativeDistribution">
      <implementation-class>org.alembic.aurion.admindistribution.nhin.NhinAdministrativeDistribution</implementation-class>
      <wsdl-url>file:/C:/projects/nhinc/Current/Product/Production/Common/Interfaces/src/wsdl/NhinAdminDist.wsdl</wsdl-url>
      <local-wsdl-file>NhinAdminDist.wsdl</local-wsdl-file>
      <service-name>RespondingGateway_AdministrativeDistribution</service-name>
      <port-name>RespondingGateway_AdministrativeDistribution_PortType</port-name>
      <package-name>org.alembic.aurion.nhinadmindistribution</package-name>
      <catalog-file>catalog.xml</catalog-file>
      <use-provider>false</use-provider>
      <wsimport-options>
        <wsimport-option>
          <wsimport-option-name>extension</wsimport-option-name>
          <wsimport-option-value>true</wsimport-option-value>
        </wsimport-option>
        <wsimport-option>
          <wsimport-option-name>verbose</wsimport-option-name>
          <wsimport-option-value>true</wsimport-option-value>
        </wsimport-option>
        <wsimport-option>
          <wsimport-option-name>xnocompile</wsimport-option-name>
          <wsimport-option-value>true</wsimport-option-value>
        </wsimport-option>
      </wsimport-options>
    </service>
    <service name="EntityDocRetrieveDeferredReq">
      <implementation-class>org.alembic.aurion.docretrieve.entity.deferred.request.EntityDocRetrieveDeferredReq</implementation-class>
      <wsdl-url>file:/C:/Projects/NHINC/Current/Product/Production/Common/Interfaces/src/wsdl/EntityDocumentRetrieveDeferredRequest.wsdl</wsdl-url>
      <local-wsdl-file>EntityDocumentRetrieveDeferredRequest.wsdl</local-wsdl-file>
      <service-name>EntityDocRetrieveDeferredRequest</service-name>
      <port-name>EntityDocRetrieveDeferredRequestPortSoap</port-name>
      <package-name>org.alembic.aurion.entitydocretrieve</package-name>
      <catalog-file>catalog.xml</catalog-file>
      <use-provider>false</use-provider>
      <wsimport-options>
        <wsimport-option>
          <wsimport-option-name>extension</wsimport-option-name>
          <wsimport-option-value>true</wsimport-option-value>
        </wsimport-option>
        <wsimport-option>
          <wsimport-option-name>verbose</wsimport-option-name>
          <wsimport-option-value>true</wsimport-option-value>
        </wsimport-option>
        <wsimport-option>
          <wsimport-option-name>xnocompile</wsimport-option-name>
          <wsimport-option-value>true</wsimport-option-value>
        </wsimport-option>
      </wsimport-options>
    </service>
    <service name="EntityDocRetrieveDeferredReqSecured">
      <implementation-class>org.alembic.aurion.docretrieve.entity.deferred.request.EntityDocRetrieveDeferredReqSecured</implementation-class>
      <wsdl-url>file:/C:/Projects/NHINC/Current/Product/Production/Common/Interfaces/src/wsdl/EntityDocumentRetrieveDeferredRequestSecured.wsdl</wsdl-url>
      <local-wsdl-file>EntityDocumentRetrieveDeferredRequestSecured.wsdl</local-wsdl-file>
      <service-name>EntityDocRetrieveDeferredRequestSecured</service-name>
      <port-name>EntityDocRetrieveDeferredRequestSecuredPortSoap</port-name>
      <package-name>org.alembic.aurion.entitydocretrievesecured</package-name>
      <catalog-file>catalog.xml</catalog-file>
      <use-provider>false</use-provider>
      <wsimport-options>
        <wsimport-option>
          <wsimport-option-name>extension</wsimport-option-name>
          <wsimport-option-value>true</wsimport-option-value>
        </wsimport-option>
        <wsimport-option>
          <wsimport-option-name>verbose</wsimport-option-name>
          <wsimport-option-value>true</wsimport-option-value>
        </wsimport-option>
        <wsimport-option>
          <wsimport-option-name>xnocompile</wsimport-option-name>
          <wsimport-option-value>true</wsimport-option-value>
        </wsimport-option>
      </wsimport-options>
    </service>
    <service name="EntityDocQueryDeferredReq">
      <implementation-class>org.alembic.aurion.docquery.entity.deferred.request.EntityDocQueryDeferredReq</implementation-class>
      <wsdl-url>file:/C:/Projects/NHINC/Current/Product/Production/Common/Interfaces/src/wsdl/EntityDocQueryDeferredRequest.wsdl</wsdl-url>
      <local-wsdl-file>EntityDocQueryDeferredRequest.wsdl</local-wsdl-file>
      <service-name>EntityDocQueryDeferredRequest</service-name>
      <port-name>EntityDocQueryDeferredRequestPortSoap</port-name>
      <package-name>org.alembic.aurion.entitydocquerydeferredrequest</package-name>
      <catalog-file>catalog.xml</catalog-file>
      <use-provider>false</use-provider>
      <wsimport-options>
        <wsimport-option>
          <wsimport-option-name>extension</wsimport-option-name>
          <wsimport-option-value>true</wsimport-option-value>
        </wsimport-option>
        <wsimport-option>
          <wsimport-option-name>verbose</wsimport-option-name>
          <wsimport-option-value>true</wsimport-option-value>
        </wsimport-option>
        <wsimport-option>
          <wsimport-option-name>xnocompile</wsimport-option-name>
          <wsimport-option-value>true</wsimport-option-value>
        </wsimport-option>
      </wsimport-options>
    </service>
    <service name="EntityDocQueryDeferredReqSecured">
      <implementation-class>org.alembic.aurion.docquery.entity.deferred.request.EntityDocQueryDeferredReqSecured</implementation-class>
      <wsdl-url>file:/C:/Projects/NHINC/Current/Product/Production/Common/Interfaces/src/wsdl/EntityDocQueryDeferredRequestSecured.wsdl</wsdl-url>
      <local-wsdl-file>EntityDocQueryDeferredRequestSecured.wsdl</local-wsdl-file>
      <service-name>EntityDocQueryDeferredRequestSecured</service-name>
      <port-name>EntityDocQueryDeferredRequestSecuredPortSoap</port-name>
      <package-name>org.alembic.aurion.entitydocquerydeferredrequestsecured</package-name>
      <catalog-file>catalog.xml</catalog-file>
      <use-provider>false</use-provider>
      <wsimport-options>
        <wsimport-option>
          <wsimport-option-name>extension</wsimport-option-name>
          <wsimport-option-value>true</wsimport-option-value>
        </wsimport-option>
        <wsimport-option>
          <wsimport-option-name>verbose</wsimport-option-name>
          <wsimport-option-value>true</wsimport-option-value>
        </wsimport-option>
        <wsimport-option>
          <wsimport-option-name>xnocompile</wsimport-option-name>
          <wsimport-option-value>true</wsimport-option-value>
        </wsimport-option>
      </wsimport-options>
    </service>
    <service name="EntityDocRetrieveDeferredResp">
      <implementation-class>org.alembic.aurion.docretrieve.entity.deferred.response.EntityDocRetrieveDeferredResp</implementation-class>
      <wsdl-url>file:/C:/Projects/NHINC/Current/Product/Production/Common/Interfaces/src/wsdl/EntityDocumentRetrieveDeferredResponse.wsdl</wsdl-url>
      <local-wsdl-file>EntityDocumentRetrieveDeferredResponse.wsdl</local-wsdl-file>
      <service-name>EntityDocRetrieveDeferredResponse</service-name>
      <port-name>EntityDocRetrieveDeferredResponsePortSoap</port-name>
      <package-name>org.alembic.aurion.entitydocretrieve</package-name>
      <catalog-file>catalog.xml</catalog-file>
      <use-provider>false</use-provider>
      <wsimport-options>
        <wsimport-option>
          <wsimport-option-name>extension</wsimport-option-name>
          <wsimport-option-value>true</wsimport-option-value>
        </wsimport-option>
        <wsimport-option>
          <wsimport-option-name>verbose</wsimport-option-name>
          <wsimport-option-value>true</wsimport-option-value>
        </wsimport-option>
        <wsimport-option>
          <wsimport-option-name>xnocompile</wsimport-option-name>
          <wsimport-option-value>true</wsimport-option-value>
        </wsimport-option>
      </wsimport-options>
    </service>
    <service name="EntityDocRetrieveDeferredRespSecured">
      <implementation-class>org.alembic.aurion.docretrieve.entity.deferred.response.EntityDocRetrieveDeferredRespSecured</implementation-class>
      <wsdl-url>file:/C:/Projects/NHINC/Current/Product/Production/Common/Interfaces/src/wsdl/EntityDocumentRetrieveDeferredResponseSecured.wsdl</wsdl-url>
      <local-wsdl-file>EntityDocumentRetrieveDeferredResponseSecured.wsdl</local-wsdl-file>
      <service-name>EntityDocRetrieveDeferredResponseSecured</service-name>
      <port-name>EntityDocRetrieveDeferredResponseSecuredPortSoap</port-name>
      <package-name>org.alembic.aurion.entitydocretrievesecured</package-name>
      <catalog-file>catalog.xml</catalog-file>
      <use-provider>false</use-provider>
      <wsimport-options>
        <wsimport-option>
          <wsimport-option-name>extension</wsimport-option-name>
          <wsimport-option-value>true</wsimport-option-value>
        </wsimport-option>
        <wsimport-option>
          <wsimport-option-name>verbose</wsimport-option-name>
          <wsimport-option-value>true</wsimport-option-value>
        </wsimport-option>
        <wsimport-option>
          <wsimport-option-name>xnocompile</wsimport-option-name>
          <wsimport-option-value>true</wsimport-option-value>
        </wsimport-option>
      </wsimport-options>
    </service>
    <service name="EntityDocQueryDeferredResponseUnsecured">
      <implementation-class>org.alembic.aurion.docquery.entity.deferred.response.EntityDocQueryDeferredResponseUnsecured</implementation-class>
      <wsdl-url>file:/C:/Projects/NHINC/Current/Product/Production/Common/Interfaces/src/wsdl/EntityDocQueryDeferredResponse.wsdl</wsdl-url>
      <local-wsdl-file>EntityDocQueryDeferredResponse.wsdl</local-wsdl-file>
      <service-name>EntityDocQueryDeferredResponse</service-name>
      <port-name>EntityDocQueryDeferredResponsePortSoap</port-name>
      <package-name>org.alembic.aurion.entitydocquerydeferredresponse</package-name>
      <catalog-file>catalog.xml</catalog-file>
      <use-provider>false</use-provider>
      <wsimport-options>
        <wsimport-option>
          <wsimport-option-name>extension</wsimport-option-name>
          <wsimport-option-value>true</wsimport-option-value>
        </wsimport-option>
        <wsimport-option>
          <wsimport-option-name>verbose</wsimport-option-name>
          <wsimport-option-value>true</wsimport-option-value>
        </wsimport-option>
        <wsimport-option>
          <wsimport-option-name>xnocompile</wsimport-option-name>
          <wsimport-option-value>true</wsimport-option-value>
        </wsimport-option>
      </wsimport-options>
    </service>
    <service name="EntityDocQueryDeferredResponseSecured">
      <implementation-class>org.alembic.aurion.docquery.entity.deferred.response.EntityDocQueryDeferredResponseSecured</implementation-class>
      <wsdl-url>file:/C:/Projects/NHINC/Current/Product/Production/Common/Interfaces/src/wsdl/EntityDocQueryDeferredResponseSecured.wsdl</wsdl-url>
      <local-wsdl-file>EntityDocQueryDeferredResponseSecured.wsdl</local-wsdl-file>
      <service-name>EntityDocQueryDeferredResponseSecured</service-name>
      <port-name>EntityDocQueryDeferredResponseSecuredPortSoap</port-name>
      <package-name>org.alembic.aurion.entitydocquerydeferredresponsesecured</package-name>
      <catalog-file>catalog.xml</catalog-file>
      <use-provider>false</use-provider>
      <wsimport-options>
        <wsimport-option>
          <wsimport-option-name>extension</wsimport-option-name>
          <wsimport-option-value>true</wsimport-option-value>
        </wsimport-option>
        <wsimport-option>
          <wsimport-option-name>verbose</wsimport-option-name>
          <wsimport-option-value>true</wsimport-option-value>
        </wsimport-option>
        <wsimport-option>
          <wsimport-option-name>xnocompile</wsimport-option-name>
          <wsimport-option-value>true</wsimport-option-value>
        </wsimport-option>
      </wsimport-options>
    </service>
    <service name="PatientCorrelationServiceUnsecured">
      <implementation-class>org.alembic.aurion.patientcorrelation.nhinc.PatientCorrelationServiceUnsecured</implementation-class>
      <wsdl-url>file:/C:/Projects/NHINC/Current/Product/Production/Common/Interfaces/src/wsdl/NhincComponentPatientCorrelation.wsdl</wsdl-url>
      <local-wsdl-file>NhincComponentPatientCorrelation.wsdl</local-wsdl-file>
      <service-name>PatientCorrelationService</service-name>
      <port-name>PatientCorrelationPort</port-name>
      <package-name>org.alembic.aurion.nhinccomponentpatientcorrelation</package-name>
      <catalog-file>catalog.xml</catalog-file>
      <use-provider>false</use-provider>
      <wsimport-options>
        <wsimport-option>
          <wsimport-option-name>extension</wsimport-option-name>
          <wsimport-option-value>true</wsimport-option-value>
        </wsimport-option>
        <wsimport-option>
          <wsimport-option-name>verbose</wsimport-option-name>
          <wsimport-option-value>true</wsimport-option-value>
        </wsimport-option>
        <wsimport-option>
          <wsimport-option-name>xnocompile</wsimport-option-name>
          <wsimport-option-value>true</wsimport-option-value>
        </wsimport-option>
      </wsimport-options>
    </service>
    <service name="EntityDocQueryUnsecured">
      <implementation-class>org.alembic.aurion.docquery.entity.EntityDocQueryUnsecured</implementation-class>
      <wsdl-url>file:/C:/projects/NHINC/Current/Product/Production/Common/Interfaces/src/wsdl/EntityDocQuery.wsdl</wsdl-url>
      <local-wsdl-file>EntityDocQuery.wsdl</local-wsdl-file>
      <service-name>EntityDocQuery</service-name>
      <port-name>EntityDocQueryPortSoap</port-name>
      <package-name>org.alembic.aurion.entitydocquery</package-name>
      <catalog-file>catalog.xml</catalog-file>
      <use-provider>false</use-provider>
      <wsimport-options>
        <wsimport-option>
          <wsimport-option-name>extension</wsimport-option-name>
          <wsimport-option-value>true</wsimport-option-value>
        </wsimport-option>
        <wsimport-option>
          <wsimport-option-name>verbose</wsimport-option-name>
          <wsimport-option-value>true</wsimport-option-value>
        </wsimport-option>
        <wsimport-option>
          <wsimport-option-name>xnocompile</wsimport-option-name>
          <wsimport-option-value>true</wsimport-option-value>
        </wsimport-option>
      </wsimport-options>
    </service>
    <service name="AuditRepositoryManagerService">
      <implementation-class>org.alembic.aurion.auditrepository.nhinc.AuditRepositoryUnsecured</implementation-class>
      <wsdl-url>file:/C:/Projects/NHINC/Current/Product/Production/Common/Interfaces/src/wsdl/NhincComponentAuditRepository.wsdl</wsdl-url>
      <local-wsdl-file>NhincComponentAuditRepository.wsdl</local-wsdl-file>
      <service-name>AuditRepositoryManagerService</service-name>
      <port-name>AuditRepositoryManagerPort</port-name>
      <package-name>org.alembic.aurion.nhinccomponentauditrepository</package-name>
      <catalog-file>catalog.xml</catalog-file>
      <use-provider>false</use-provider>
      <wsimport-options>
        <wsimport-option>
          <wsimport-option-name>extension</wsimport-option-name>
          <wsimport-option-value>true</wsimport-option-value>
        </wsimport-option>
        <wsimport-option>
          <wsimport-option-name>verbose</wsimport-option-name>
          <wsimport-option-value>true</wsimport-option-value>
        </wsimport-option>
        <wsimport-option>
          <wsimport-option-name>xnocompile</wsimport-option-name>
          <wsimport-option-value>true</wsimport-option-value>
        </wsimport-option>
      </wsimport-options>
    </service>
    <service name="EntityPatientDiscoveryDeferredRequestUnsecured">
      <implementation-class>org.alembic.aurion.patientdiscovery.entity.deferred.request.EntityPatientDiscoveryDeferredRequestUnsecured</implementation-class>
      <wsdl-url>file:/C:/projects/NHINC/Current/Product/Production/Common/Interfaces/src/wsdl/EntityPatientDiscoveryAsyncReq.wsdl</wsdl-url>
      <local-wsdl-file>EntityPatientDiscoveryAsyncReq.wsdl</local-wsdl-file>
      <service-name>EntityPatientDiscoveryAsyncReq</service-name>
      <port-name>EntityPatientDiscoveryAsyncReqPortSoap</port-name>
      <package-name>org.alembic.aurion.entitypatientdiscoveryasyncreq</package-name>
      <catalog-file>catalog.xml</catalog-file>
      <use-provider>false</use-provider>
      <wsimport-options>
        <wsimport-option>
          <wsimport-option-name>extension</wsimport-option-name>
          <wsimport-option-value>true</wsimport-option-value>
        </wsimport-option>
        <wsimport-option>
          <wsimport-option-name>verbose</wsimport-option-name>
          <wsimport-option-value>true</wsimport-option-value>
        </wsimport-option>
        <wsimport-option>
          <wsimport-option-name>xnocompile</wsimport-option-name>
          <wsimport-option-value>true</wsimport-option-value>
        </wsimport-option>
      </wsimport-options>
    </service>
    <service name="EntityPatientDiscoveryDeferredRequestSecured">
      <implementation-class>org.alembic.aurion.patientdiscovery.entity.deferred.request.EntityPatientDiscoveryDeferredRequestSecured</implementation-class>
      <wsdl-url>file:/C:/projects/NHINC/Current/Product/Production/Common/Interfaces/src/wsdl/EntityPatientDiscoverySecuredAsyncReq.wsdl</wsdl-url>
      <local-wsdl-file>EntityPatientDiscoverySecuredAsyncReq.wsdl</local-wsdl-file>
      <service-name>EntityPatientDiscoverySecuredAsyncReq</service-name>
      <port-name>EntityPatientDiscoverySecuredAsyncReqPortSoap</port-name>
      <package-name>org.alembic.aurion.entitypatientdiscoverysecuredasyncreq</package-name>
      <catalog-file>catalog.xml</catalog-file>
      <use-provider>false</use-provider>
      <wsimport-options>
        <wsimport-option>
          <wsimport-option-name>extension</wsimport-option-name>
          <wsimport-option-value>true</wsimport-option-value>
        </wsimport-option>
        <wsimport-option>
          <wsimport-option-name>verbose</wsimport-option-name>
          <wsimport-option-value>true</wsimport-option-value>
        </wsimport-option>
        <wsimport-option>
          <wsimport-option-name>xnocompile</wsimport-option-name>
          <wsimport-option-value>true</wsimport-option-value>
        </wsimport-option>
      </wsimport-options>
    </service>
    <service name="EntityPatientDiscoveryDeferredReqQueueUnsecured">
      <implementation-class>org.alembic.aurion.patientdiscovery.entity.deferred.request.queue.EntityPatientDiscoveryDeferredReqQueueUnsecured</implementation-class>
      <wsdl-url>file:/C:/Projects/NHINC/Current/Product/Production/Common/Interfaces/src/wsdl/EntityPatientDiscoveryAsyncReqQueue.wsdl</wsdl-url>
      <local-wsdl-file>EntityPatientDiscoveryAsyncReqQueue.wsdl</local-wsdl-file>
      <service-name>EntityPatientDiscoveryAsyncReqQueue</service-name>
      <port-name>EntityPatientDiscoveryAsyncReqQueuePortSoap</port-name>
      <package-name>org.alembic.aurion.entitypatientdiscoveryasyncreqqueue</package-name>
      <catalog-file>catalog.xml</catalog-file>
      <use-provider>false</use-provider>
      <wsimport-options>
        <wsimport-option>
          <wsimport-option-name>extension</wsimport-option-name>
          <wsimport-option-value>true</wsimport-option-value>
        </wsimport-option>
        <wsimport-option>
          <wsimport-option-name>verbose</wsimport-option-name>
          <wsimport-option-value>true</wsimport-option-value>
        </wsimport-option>
        <wsimport-option>
          <wsimport-option-name>xnocompile</wsimport-option-name>
          <wsimport-option-value>true</wsimport-option-value>
        </wsimport-option>
      </wsimport-options>
    </service>
    <service name="EntityPatientDiscoveryDeferredReqQueueSecured">
      <implementation-class>org.alembic.aurion.patientdiscovery.entity.deferred.request.queue.EntityPatientDiscoveryDeferredReqQueueSecured</implementation-class>
      <wsdl-url>file:/C:/Projects/NHINC/Current/Product/Production/Common/Interfaces/src/wsdl/EntityPatientDiscoverySecuredAsyncReqQueue.wsdl</wsdl-url>
      <local-wsdl-file>EntityPatientDiscoverySecuredAsyncReqQueue.wsdl</local-wsdl-file>
      <service-name>EntityPatientDiscoverySecuredAsyncReqQueue</service-name>
      <port-name>EntityPatientDiscoverySecuredAsyncReqQueuePortSoap</port-name>
      <package-name>org.alembic.aurion.entitypatientdiscoverysecuredasyncreqqueue</package-name>
      <catalog-file>catalog.xml</catalog-file>
      <use-provider>false</use-provider>
      <wsimport-options>
        <wsimport-option>
          <wsimport-option-name>extension</wsimport-option-name>
          <wsimport-option-value>true</wsimport-option-value>
        </wsimport-option>
        <wsimport-option>
          <wsimport-option-name>verbose</wsimport-option-name>
          <wsimport-option-value>true</wsimport-option-value>
        </wsimport-option>
        <wsimport-option>
          <wsimport-option-name>xnocompile</wsimport-option-name>
          <wsimport-option-value>true</wsimport-option-value>
        </wsimport-option>
      </wsimport-options>
    </service>
    <service name="EntityDocSubmissionDeferredRequestSecured">
      <implementation-class>org.alembic.aurion.docsubmission.entity.deferred.request.EntityDocSubmissionDeferredRequestSecured</implementation-class>
      <wsdl-url>file:/C:/Projects/NHINC/Current/Product/Production/Common/Interfaces/src/wsdl/EntityXDRSecuredRequest.wsdl</wsdl-url>
      <local-wsdl-file>EntityXDRSecuredRequest.wsdl</local-wsdl-file>
      <service-name>EntityXDRSecuredAsyncRequest_Service</service-name>
      <port-name>EntityXDRSecuredAsyncRequest_Port</port-name>
      <package-name>org.alembic.aurion.nhincentityxdrsecured.async.request</package-name>
      <catalog-file>catalog.xml</catalog-file>
      <use-provider>false</use-provider>
      <wsimport-options>
        <wsimport-option>
          <wsimport-option-name>extension</wsimport-option-name>
          <wsimport-option-value>true</wsimport-option-value>
        </wsimport-option>
        <wsimport-option>
          <wsimport-option-name>verbose</wsimport-option-name>
          <wsimport-option-value>true</wsimport-option-value>
        </wsimport-option>
        <wsimport-option>
          <wsimport-option-name>xnocompile</wsimport-option-name>
          <wsimport-option-value>true</wsimport-option-value>
        </wsimport-option>
      </wsimport-options>
    </service>
    <service name="EntityDocSubmissionDeferredRequestUnsecured">
      <implementation-class>org.alembic.aurion.docsubmission.entity.deferred.request.EntityDocSubmissionDeferredRequestUnsecured</implementation-class>
      <wsdl-url>file:/C:/Projects/NHINC/Current/Product/Production/Common/Interfaces/src/wsdl/EntityXDRRequest.wsdl</wsdl-url>
      <local-wsdl-file>EntityXDRRequest.wsdl</local-wsdl-file>
      <service-name>EntityXDRAsyncRequest_Service</service-name>
      <port-name>EntityXDRAsyncRequest_Port</port-name>
      <package-name>org.alembic.aurion.nhincentityxdr.async.request</package-name>
      <catalog-file>catalog.xml</catalog-file>
      <use-provider>false</use-provider>
      <wsimport-options>
        <wsimport-option>
          <wsimport-option-name>extension</wsimport-option-name>
          <wsimport-option-value>true</wsimport-option-value>
        </wsimport-option>
        <wsimport-option>
          <wsimport-option-name>verbose</wsimport-option-name>
          <wsimport-option-value>true</wsimport-option-value>
        </wsimport-option>
        <wsimport-option>
          <wsimport-option-name>xnocompile</wsimport-option-name>
          <wsimport-option-value>true</wsimport-option-value>
        </wsimport-option>
      </wsimport-options>
    </service>
    <service name="EntityDocSubmissionDeferredResponseSecured">
      <implementation-class>org.alembic.aurion.docsubmission.entity.deferred.response.EntityDocSubmissionDeferredResponseSecured</implementation-class>
      <wsdl-url>file:/C:/Projects/NHINC/Current/Product/Production/Common/Interfaces/src/wsdl/EntityXDRSecuredResponse.wsdl</wsdl-url>
      <local-wsdl-file>EntityXDRSecuredResponse.wsdl</local-wsdl-file>
      <service-name>EntityXDRSecuredAsyncResponse_Service</service-name>
      <port-name>EntityXDRSecuredAsyncResponse_Port</port-name>
      <package-name>org.alembic.aurion.nhincentityxdrsecured.async.response</package-name>
      <catalog-file>catalog.xml</catalog-file>
      <use-provider>false</use-provider>
      <wsimport-options>
        <wsimport-option>
          <wsimport-option-name>extension</wsimport-option-name>
          <wsimport-option-value>true</wsimport-option-value>
        </wsimport-option>
        <wsimport-option>
          <wsimport-option-name>verbose</wsimport-option-name>
          <wsimport-option-value>true</wsimport-option-value>
        </wsimport-option>
        <wsimport-option>
          <wsimport-option-name>xnocompile</wsimport-option-name>
          <wsimport-option-value>true</wsimport-option-value>
        </wsimport-option>
      </wsimport-options>
    </service>
    <service name="EntityDocSubmissionDeferredResponseUnsecured">
      <implementation-class>org.alembic.aurion.docsubmission.entity.deferred.response.EntityDocSubmissionDeferredResponseUnsecured</implementation-class>
      <wsdl-url>file:/C:/Projects/NHINC/Current/Product/Production/Common/Interfaces/src/wsdl/EntityXDRResponse.wsdl</wsdl-url>
      <local-wsdl-file>EntityXDRResponse.wsdl</local-wsdl-file>
      <service-name>EntityXDRAsyncResponse_Service</service-name>
      <port-name>EntityXDRAsyncResponse_Port</port-name>
      <package-name>org.alembic.aurion.nhincentityxdr.async.response</package-name>
      <catalog-file>catalog.xml</catalog-file>
      <use-provider>false</use-provider>
      <wsimport-options>
        <wsimport-option>
          <wsimport-option-name>extension</wsimport-option-name>
          <wsimport-option-value>true</wsimport-option-value>
        </wsimport-option>
        <wsimport-option>
          <wsimport-option-name>verbose</wsimport-option-name>
          <wsimport-option-value>true</wsimport-option-value>
        </wsimport-option>
        <wsimport-option>
          <wsimport-option-name>xnocompile</wsimport-option-name>
          <wsimport-option-value>true</wsimport-option-value>
        </wsimport-option>
      </wsimport-options>
    </service>
    <service name="EntityPatientDiscoveryDeferredResponseSecured">
      <implementation-class>org.alembic.aurion.patientdiscovery.entity.deferred.response.EntityPatientDiscoveryDeferredResponseSecured</implementation-class>
      <wsdl-url>file:/C:/Projects/NHINC/Current/Product/Production/Common/Interfaces/src/wsdl/EntityPatientDiscoverySecuredAsyncResp.wsdl</wsdl-url>
      <local-wsdl-file>EntityPatientDiscoverySecuredAsyncResp.wsdl</local-wsdl-file>
      <service-name>EntityPatientDiscoverySecuredAsyncResp</service-name>
      <port-name>EntityPatientDiscoverySecuredAsyncRespPortSoap</port-name>
      <package-name>org.alembic.aurion.entitypatientdiscoverysecuredasyncresp</package-name>
      <catalog-file>catalog.xml</catalog-file>
      <use-provider>false</use-provider>
      <wsimport-options>
        <wsimport-option>
          <wsimport-option-name>extension</wsimport-option-name>
          <wsimport-option-value>true</wsimport-option-value>
        </wsimport-option>
        <wsimport-option>
          <wsimport-option-name>verbose</wsimport-option-name>
          <wsimport-option-value>true</wsimport-option-value>
        </wsimport-option>
        <wsimport-option>
          <wsimport-option-name>xnocompile</wsimport-option-name>
          <wsimport-option-value>true</wsimport-option-value>
        </wsimport-option>
      </wsimport-options>
    </service>
    <service name="EntityPatientDiscoveryDeferredResponseUnsecured">
      <implementation-class>org.alembic.aurion.patientdiscovery.entity.deferred.response.EntityPatientDiscoveryDeferredResponseUnsecured</implementation-class>
      <wsdl-url>file:/C:/Projects/NHINC/Current/Product/Production/Common/Interfaces/src/wsdl/EntityPatientDiscoveryAsyncResp.wsdl</wsdl-url>
      <local-wsdl-file>EntityPatientDiscoveryAsyncResp.wsdl</local-wsdl-file>
      <service-name>EntityPatientDiscoveryAsyncResp</service-name>
      <port-name>EntityPatientDiscoveryAsyncRespPortSoap</port-name>
      <package-name>org.alembic.aurion.entitypatientdiscoveryasyncresp</package-name>
      <catalog-file>catalog.xml</catalog-file>
      <use-provider>false</use-provider>
      <wsimport-options>
        <wsimport-option>
          <wsimport-option-name>extension</wsimport-option-name>
          <wsimport-option-value>true</wsimport-option-value>
        </wsimport-option>
        <wsimport-option>
          <wsimport-option-name>verbose</wsimport-option-name>
          <wsimport-option-value>true</wsimport-option-value>
        </wsimport-option>
        <wsimport-option>
          <wsimport-option-name>xnocompile</wsimport-option-name>
          <wsimport-option-value>true</wsimport-option-value>
        </wsimport-option>
      </wsimport-options>
    </service>
    <service name="EntityDocSubmissionUnsecured">
      <implementation-class>org.alembic.aurion.docsubmission.entity.EntityDocSubmissionUnsecured</implementation-class>
      <wsdl-url>file:/C:/projects/NHINC/Current/Product/Production/Common/Interfaces/src/wsdl/EntityXDR.wsdl</wsdl-url>
      <local-wsdl-file>EntityXDR.wsdl</local-wsdl-file>
      <service-name>EntityXDR_Service</service-name>
      <port-name>EntityXDR_Port</port-name>
      <package-name>org.alembic.aurion.nhincentityxdr</package-name>
      <catalog-file>catalog.xml</catalog-file>
      <use-provider>false</use-provider>
      <wsimport-options>
        <wsimport-option>
          <wsimport-option-name>extension</wsimport-option-name>
          <wsimport-option-value>true</wsimport-option-value>
        </wsimport-option>
        <wsimport-option>
          <wsimport-option-name>verbose</wsimport-option-name>
          <wsimport-option-value>true</wsimport-option-value>
        </wsimport-option>
        <wsimport-option>
          <wsimport-option-name>xnocompile</wsimport-option-name>
          <wsimport-option-value>true</wsimport-option-value>
        </wsimport-option>
      </wsimport-options>
    </service>
    <service name="EntityDocSubmissionSecured">
      <implementation-class>org.alembic.aurion.docsubmission.entity.EntityDocSubmissionSecured</implementation-class>
      <wsdl-url>file:/C:/projects/NHINC/Current/Product/Production/Common/Interfaces/src/wsdl/EntityXDRSecured.wsdl</wsdl-url>
      <local-wsdl-file>EntityXDRSecured.wsdl</local-wsdl-file>
      <service-name>EntityXDRSecured_Service</service-name>
      <port-name>EntityXDRSecured_Port</port-name>
      <package-name>org.alembic.aurion.nhincentityxdrsecured</package-name>
      <catalog-file>catalog.xml</catalog-file>
      <use-provider>false</use-provider>
      <wsimport-options>
        <wsimport-option>
          <wsimport-option-name>extension</wsimport-option-name>
          <wsimport-option-value>true</wsimport-option-value>
        </wsimport-option>
        <wsimport-option>
          <wsimport-option-name>verbose</wsimport-option-name>
          <wsimport-option-value>true</wsimport-option-value>
        </wsimport-option>
        <wsimport-option>
          <wsimport-option-name>xnocompile</wsimport-option-name>
          <wsimport-option-value>true</wsimport-option-value>
        </wsimport-option>
      </wsimport-options>
    </service>
    <service name="EntityNotificationConsumerUnsecured">
      <implementation-class>org.alembic.aurion.hiem.entity.notify.EntityNotificationConsumerUnsecured</implementation-class>
      <wsdl-url>file:/C:/Projects/Aurion/Current/Product/Production/Common/Interfaces/src/wsdl/EntityNotificationConsumer.wsdl</wsdl-url>
      <local-wsdl-file>EntityNotificationConsumer.wsdl</local-wsdl-file>
      <service-name>EntityNotificationConsumer</service-name>
      <port-name>EntityNotificationConsumerPortSoap</port-name>
      <package-name>org.alembic.aurion.entitynotificationconsumer</package-name>
      <catalog-file>catalog.xml</catalog-file>
      <use-provider>false</use-provider>
      <wsimport-options>
        <wsimport-option>
          <wsimport-option-name>extension</wsimport-option-name>
          <wsimport-option-value>true</wsimport-option-value>
        </wsimport-option>
        <wsimport-option>
          <wsimport-option-name>verbose</wsimport-option-name>
          <wsimport-option-value>true</wsimport-option-value>
        </wsimport-option>
        <wsimport-option>
          <wsimport-option-name>xnocompile</wsimport-option-name>
          <wsimport-option-value>true</wsimport-option-value>
        </wsimport-option>
      </wsimport-options>
    </service>
    <service name="EntityNotificationConsumerSecured">
      <implementation-class>org.alembic.aurion.hiem.entity.notify.EntityNotificationConsumerSecured</implementation-class>
      <wsdl-url>file:/C:/Projects/Aurion/Current/Product/Production/Common/Interfaces/src/wsdl/EntityNotificationConsumerSecured.wsdl</wsdl-url>
      <local-wsdl-file>EntityNotificationConsumerSecured.wsdl</local-wsdl-file>
      <service-name>EntityNotificationConsumerSecured</service-name>
      <port-name>EntityNotificationConsumerSecuredPortSoap</port-name>
      <package-name>org.alembic.aurion.entitynotificationconsumersecured</package-name>
      <catalog-file>catalog.xml</catalog-file>
      <use-provider>false</use-provider>
      <wsimport-options>
        <wsimport-option>
          <wsimport-option-name>extension</wsimport-option-name>
          <wsimport-option-value>true</wsimport-option-value>
        </wsimport-option>
        <wsimport-option>
          <wsimport-option-name>verbose</wsimport-option-name>
          <wsimport-option-value>true</wsimport-option-value>
        </wsimport-option>
        <wsimport-option>
          <wsimport-option-name>xnocompile</wsimport-option-name>
          <wsimport-option-value>true</wsimport-option-value>
        </wsimport-option>
      </wsimport-options>
    </service>
    <service name="EntityNotificationProducerUnsecured">
      <implementation-class>org.alembic.aurion.hiem.entity.subscribe.EntityNotificationProducerUnsecured</implementation-class>
      <wsdl-url>file:/C:/Projects/Aurion/Current/Product/Production/Common/Interfaces/src/wsdl/EntitySubscriptionManagement.wsdl</wsdl-url>
      <local-wsdl-file>EntitySubscriptionManagement.wsdl</local-wsdl-file>
      <service-name>EntityNotificationProducer</service-name>
      <port-name>EntityNotificationProducerPortSoap</port-name>
      <package-name>org.alembic.aurion.entitysubscriptionmanagement</package-name>
      <catalog-file>catalog.xml</catalog-file>
      <use-provider>false</use-provider>
      <wsimport-options>
        <wsimport-option>
          <wsimport-option-name>extension</wsimport-option-name>
          <wsimport-option-value>true</wsimport-option-value>
        </wsimport-option>
        <wsimport-option>
          <wsimport-option-name>verbose</wsimport-option-name>
          <wsimport-option-value>true</wsimport-option-value>
        </wsimport-option>
        <wsimport-option>
          <wsimport-option-name>xnocompile</wsimport-option-name>
          <wsimport-option-value>true</wsimport-option-value>
        </wsimport-option>
      </wsimport-options>
    </service>
    <service name="EntitySubscriptionManagerUnsecured">
      <implementation-class>org.alembic.aurion.hiem.entity.unsubscribe.EntitySubscriptionManagerUnsecured</implementation-class>
      <wsdl-url>file:/C:/Projects/Aurion/Current/Product/Production/Common/Interfaces/src/wsdl/EntitySubscriptionManagement.wsdl</wsdl-url>
      <local-wsdl-file>EntitySubscriptionManagement.wsdl</local-wsdl-file>
      <service-name>EntitySubscriptionManager</service-name>
      <port-name>EntitySubscriptionManagerPortSoap</port-name>
      <package-name>org.alembic.aurion.entitysubscriptionmanagement</package-name>
      <catalog-file>catalog.xml</catalog-file>
      <use-provider>false</use-provider>
      <wsimport-options>
        <wsimport-option>
          <wsimport-option-name>extension</wsimport-option-name>
          <wsimport-option-value>true</wsimport-option-value>
        </wsimport-option>
        <wsimport-option>
          <wsimport-option-name>verbose</wsimport-option-name>
          <wsimport-option-value>true</wsimport-option-value>
        </wsimport-option>
        <wsimport-option>
          <wsimport-option-name>xnocompile</wsimport-option-name>
          <wsimport-option-value>true</wsimport-option-value>
        </wsimport-option>
      </wsimport-options>
    </service>
    <service name="EntitySubscriptionManagerSecured">
      <implementation-class>org.alembic.aurion.hiem.entity.unsubscribe.EntitySubscriptionManagerSecured</implementation-class>
      <wsdl-url>file:/C:/Projects/Aurion/Current/Product/Production/Common/Interfaces/src/wsdl/EntitySubscriptionManagementSecured.wsdl</wsdl-url>
      <local-wsdl-file>EntitySubscriptionManagementSecured.wsdl</local-wsdl-file>
      <service-name>EntitySubscriptionManagerSecured</service-name>
      <port-name>EntitySubscriptionManagerSecuredPortSoap</port-name>
      <package-name>org.alembic.aurion.entitysubscriptionmanagementsecured</package-name>
      <catalog-file>catalog.xml</catalog-file>
      <use-provider>false</use-provider>
      <wsimport-options>
        <wsimport-option>
          <wsimport-option-name>extension</wsimport-option-name>
          <wsimport-option-value>true</wsimport-option-value>
        </wsimport-option>
        <wsimport-option>
          <wsimport-option-name>verbose</wsimport-option-name>
          <wsimport-option-value>true</wsimport-option-value>
        </wsimport-option>
        <wsimport-option>
          <wsimport-option-name>xnocompile</wsimport-option-name>
          <wsimport-option-value>true</wsimport-option-value>
        </wsimport-option>
      </wsimport-options>
    </service>
    <service name="EntityNotificationProducerSecured">
      <implementation-class>org.alembic.aurion.hiem.entity.subscribe.EntityNotificationProducerSecured</implementation-class>
      <wsdl-url>file:/C:/Projects/Aurion/Current/Product/Production/Common/Interfaces/src/wsdl/EntitySubscriptionManagementSecured.wsdl</wsdl-url>
      <local-wsdl-file>EntitySubscriptionManagementSecured.wsdl</local-wsdl-file>
      <service-name>EntityNotificationProducerSecured</service-name>
      <port-name>EntityNotificationProducerSecuredPortSoap</port-name>
      <package-name>org.alembic.aurion.entitysubscriptionmanagementsecured</package-name>
      <catalog-file>catalog.xml</catalog-file>
      <use-provider>false</use-provider>
      <wsimport-options>
        <wsimport-option>
          <wsimport-option-name>extension</wsimport-option-name>
          <wsimport-option-value>true</wsimport-option-value>
        </wsimport-option>
        <wsimport-option>
          <wsimport-option-name>verbose</wsimport-option-name>
          <wsimport-option-value>true</wsimport-option-value>
        </wsimport-option>
        <wsimport-option>
          <wsimport-option-name>xnocompile</wsimport-option-name>
          <wsimport-option-value>true</wsimport-option-value>
        </wsimport-option>
      </wsimport-options>
    </service>
  </services>
  <clients/>
</jax-ws>
