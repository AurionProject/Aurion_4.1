<?xml version="1.0" encoding="UTF-8"?>
<definitions name="AuditRepositoryManager" targetNamespace="urn:org:alembic:aurion:nhinccomponentauditrepository"
xmlns="http://schemas.xmlsoap.org/wsdl/"
xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/"
xmlns:xsd="http://www.w3.org/2001/XMLSchema"
xmlns:tns="urn:org:alembic:aurion:nhinccomponentauditrepository"
xmlns:ns="http://nhinc.services.com/schema/auditmessage"
xmlns:plnk="http://docs.oasis-open.org/wsbpel/2.0/plnktype"
xmlns:wsp="http://schemas.xmlsoap.org/ws/2004/09/policy"
xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd"
xmlns:wsaws="http://www.w3.org/2005/08/addressing"
xmlns:sp="http://schemas.xmlsoap.org/ws/2005/07/securitypolicy"
xmlns:sc="http://schemas.sun.com/2006/03/wss/server"
xmlns:wspp="http://java.sun.com/xml/ns/wsit/policy"
xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap12/"
xmlns:audit="urn:org:alembic:aurion:common:auditlog"
xmlns:nccomadapter="urn:org:alembic:aurion:common:nhinccommonadapter"
xmlns:sc1="http://schemas.sun.com/2006/03/wss/client">
	<types>
		<xsd:schema targetNamespace="urn:org:alembic:aurion:nhinccomponentauditrepository">
			<xsd:import schemaLocation="../schemas/nhinc/common/AuditLog.xsd" namespace="urn:org:alembic:aurion:common:auditlog"/>
			<xsd:import namespace="urn:org:alembic:aurion:common:nhinccommonadapter" schemaLocation="../schemas/nhinc/common/NhincCommonAdapter.xsd"/>
		</xsd:schema>
	</types>
	<message name="QueryAuditEventsRequestMessage">
		<part name="QueryAuditEventsRequest" element="nccomadapter:FindCommunitiesAndAuditEventsRequest"/>
	</message>
	<message name="QueryAuditEventsResponseMessage">
		<part name="QueryAuditEventsResponse" element="nccomadapter:FindCommunitiesAndAuditEventsResponse"/>
	</message>
	<message name="LogEventRequestMessage">
		<part name="LogEventRequest" element="audit:LogEventSecureRequest"/>
	</message>
	<message name="LogEventResponseMessage">
		<part name="LogEventResponse" element="audit:LogEventResponse"/>
	</message>
	<portType name="AuditRepositoryManagerSecuredPortType">
		<operation name="QueryAuditEvents">
			<input name="QueryAuditEventsRequest" message="tns:QueryAuditEventsRequestMessage"/>
			<output name="QueryAuditEventsResponse" message="tns:QueryAuditEventsResponseMessage"/>
		</operation>
		<operation name="LogEvent">
			<input name="LogEventRequest" message="tns:LogEventRequestMessage"/>
			<output name="LogEventResponse" message="tns:LogEventResponseMessage"/>
		</operation>
	</portType>
	<binding name="AuditRepositoryManagerSecuredBinding" type="tns:AuditRepositoryManagerSecuredPortType">
		<soap:binding style="document" transport="http://schemas.xmlsoap.org/soap/http"/>
		<wsp:PolicyReference URI="#AuditRepository_Binding_SoapPolicy"/>
		<operation name="QueryAuditEvents">
			<soap:operation style="document" soapAction="urn:QueryAuditEvents"/>
			<input name="QueryAuditEventsRequest">
				<soap:body use="literal"/>
			</input>
			<output name="QueryAuditEventsResponse">
				<soap:body use="literal"/>
			</output>
		</operation>
		<operation name="LogEvent">
			<soap:operation soapAction="urn:LogEvent"/>
			<input name="LogEventRequest">
				<soap:body use="literal"/>
			</input>
			<output name="LogEventResponse">
				<soap:body use="literal"/>
			</output>
		</operation>
	</binding>
	<service name="AuditRepositoryManagerSecuredService">
		<port name="AuditRepositoryManagerSecuredPort" binding="tns:AuditRepositoryManagerSecuredBinding">
			<soap:address location="https://localhost:${HttpsDefaultPort}/NhinConnect/AuditRepositoryManagerSecuredService"/>
		</port>
	</service>
	<plnk:partnerLinkType name="AuditRepositoryManagerSecured">
		<plnk:role name="AuditRepositoryManagerSecuredPortTypeRole" portType="tns:AuditRepositoryManagerSecuredPortType"/>
	</plnk:partnerLinkType>
	<wsp:Policy wsu:Id="AuditRepository_Binding_SoapPolicy">
		<wsp:ExactlyOne>
			<wsp:All>
				<sc1:KeyStore wspp:visibility="private" aliasSelector="org.alembic.aurion.callback.KeyStoreClientAliasSelector" callbackHandler="org.alembic.aurion.callback.KeyStoreCallbackHandler"/>
        <sc1:TrustStore wspp:visibility="private" certSelector = "org.alembic.aurion.callback.TrustStoreAliasSelector" callbackHandler="org.alembic.aurion.callback.TrustStoreCallbackHandler"/>
        <sc1:CallbackHandlerConfiguration wspp:visibility="private">
          <sc1:CallbackHandler name="samlHandler" classname="org.alembic.aurion.callback.SamlCallbackHandler"/>
        </sc1:CallbackHandlerConfiguration>
			</wsp:All>
		</wsp:ExactlyOne>
	</wsp:Policy>
</definitions>
